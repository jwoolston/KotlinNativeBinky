plugins {
    id 'kotlin-multiplatform' version '1.3.11'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
ext.ZEPHYR_BASE = properties.getProperty('ZEPHYR_BASE')
ext.ZEPHYR_SDK_INSTALL_DIR = properties.getProperty('ZEPHYR_SDK_INSTALL_DIR')
ext.BOARD = 'stm32f4_disco'

repositories {
    mavenCentral()
}

kotlin {
    targets {
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
        fromPreset(presets.iosArm32, 'stm32f4')

        configure([stm32f4]) {
            // Comment to generate Kotlin/Native library (KLIB) instead of executable file:
            compilations.main.outputKinds('EXECUTABLE')
            // Change to specify fully qualified name of your application's entry point:
            compilations.main.entryPoint = 'sample.main'
        }
    }
    sourceSets {
        // Note: To enable common source sets please comment out 'kotlin.import.noCommonSourceSets' property
        // in gradle.properties file and re-import your project in IDE.
        stm32f4Main {
            kotlin.srcDirs += 'zephyr/c_interop/platforms/build/stm32f4_disco-build/kotlin'
        }
        stm32f4Test {
        }
    }
}

task ninjaZephyr(type: Exec) {
    errorOutput = System.out
    ignoreExitValue = false
    workingDir projectDir
    commandLine("zephyr/prepareBuildEnvironment.sh", "$BOARD", "$ZEPHYR_SDK_INSTALL_DIR", "$ZEPHYR_BASE",
            "zephyr/ninjaZephyr.sh")
}

task updateCInterop(type: Exec) {
    errorOutput = System.out
    ignoreExitValue = false
    workingDir projectDir
    commandLine("zephyr/prepareBuildEnvironment.sh", "$BOARD", "$ZEPHYR_SDK_INSTALL_DIR", "$ZEPHYR_BASE",
            "zephyr/c_interop/platforms/${BOARD}.sh")
}

task runKonanc(type: Exec) {
    errorOutput = System.out
    ignoreExitValue = false
    workingDir projectDir
    commandLine("zephyr/prepareBuildEnvironment.sh", "$BOARD", "$ZEPHYR_SDK_INSTALL_DIR", "$ZEPHYR_BASE",
            "zephyr/runKonanc.sh")
}

task ninjaBuild(type: Exec) {
    errorOutput = System.out
    ignoreExitValue = false
    workingDir projectDir
    commandLine("zephyr/prepareBuildEnvironment.sh", "$BOARD", "$ZEPHYR_SDK_INSTALL_DIR", "$ZEPHYR_BASE",
            "zephyr/ninjaBuild.sh")
}

task ninjaFlash(type: Exec) {
    errorOutput = System.out
    ignoreExitValue = false
    workingDir projectDir
    commandLine("zephyr/prepareBuildEnvironment.sh", "$BOARD", "$ZEPHYR_SDK_INSTALL_DIR", "$ZEPHYR_BASE",
            "zephyr/ninjaFlash.sh")
}

task fullBuild() {
    dependsOn ninjaZephyr
    dependsOn updateCInterop
    dependsOn runKonanc
    dependsOn ninjaBuild
    tasks.findByName('updateCInterop').mustRunAfter 'ninjaZephyr'
    tasks.findByName('runKonanc').mustRunAfter 'updateCInterop'
    tasks.findByName('ninjaBuild').mustRunAfter 'runKonanc'
}

task flashBoard() {
    dependsOn ninjaFlash
}